class Solution {
    string longestpalim(string s,string revs)
    {
        int len=s.size();
        string ans; int m=0;
        int dp[len+1][len+1];
        for(int i=0;i<=len;i++)
        {
            for(int j=0;j<=len;j++)
            {
                if(j==0 || i==0) dp[i][j]=0;
                else if(s[i-1]==revs[j-1])
                {
                    dp[i][j]=1+dp[i-1][j-1];
                    if(dp[i][j]>m)
                    {
                        string a=s.substr(i-dp[i][j],dp[i][j]);
                        string b=string(a.rbegin(),a.rend());
                        if(a==b)
                        {
                            ans=a; m=dp[i][j];
                        }
                    }
                }
                else
                    dp[i][j]=0;

            }
        }
        return ans;
        
    }
public:
    string longestPalindrome(string s) 
    {
        string revs=string(s.rbegin(),s.rend());
        string z= longestpalim(s,revs);
        return z;
    }
};
