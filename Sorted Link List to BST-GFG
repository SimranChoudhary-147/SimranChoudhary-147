class Solution{
  public:
  TNode* buildtree(int low,int high,vector<int> &s)
  {
      if(low>high) return NULL;
      int mid;
      if((low+high)%2==0)
      mid=(low+high)/2;
      else
      mid=(low+high+1)/2;
      TNode* t1=new TNode(s[mid]);
    //   cout<<low<<" "<<high<<" "<<mid<<" "<<s[mid]<<endl;
     
          t1->left=buildtree(low,mid-1,s);
          t1->right=buildtree(mid+1,high,s);
  }
    TNode* sortedListToBST(LNode *head) {
       LNode* temp=head;
    //   TNode *t1 = NULL;
       vector<int>s; 
    //   int c=0;
       while(temp!=NULL)
       {
           s.push_back(temp->data);
           temp=temp->next;
       }
       
       int c=s.size();
      int low=0,high=c;
      
     return buildtree(low,high-1,s);
       
    }
};
