class Solution {
public:
    int mah(vector<int>a)
  {
      int n=a.size();
      stack<pair<int,int>>s1,s2;
       vector<int>nsl,nsr;  int ind=-1;
       for(int i=0;i<n;i++)
       {
           if(s1.size()==0)
           {
               nsl.push_back(ind);
           }
           else if(s1.size()>0 && s1.top().first<a[i])
           {
               nsl.push_back(s1.top().second);
           }
           else if(s1.size()>0 && s1.top().first>=a[i])
           {
               while(s1.size()>0 && s1.top().first>=a[i])
               {
                   s1.pop();
               }
            if(s1.size()==0)
                { nsl.push_back(ind); }
            else
               { nsl.push_back(s1.top().second); }
           }
           s1.push({a[i],i});
       }
       for(int i=n-1;i>=0;i--)
       {
           if(s2.size()==0)
           {
               nsr.push_back(n);
           }
           else if(s2.size()>0 && s2.top().first<a[i])
           {
               nsr.push_back(s2.top().second);
           }
           else if(s2.size()>0 && s2.top().first>=a[i])
           {
               while(s2.size()>0 && s2.top().first>=a[i])
               {
                   s2.pop();
               }
            if(s2.size()==0)
                { nsr.push_back(n); }
            else
                { nsr.push_back(s2.top().second); }
           }
           s2.push({a[i],i});
       } 
       reverse(nsr.begin(),nsr.end());
       int maxi=0; 
       for(int i=0;i<nsl.size();i++)
       {
          int z= (a[i]* (nsr[i]-nsl[i]-1));
           maxi=max(z,maxi);

       }
       return maxi;
  }
    int maximalRectangle(vector<vector<char>>& matrix) 
    {
          vector<int> v;
        int n = matrix.size();
        if(n == 0) return 0;   
        int m = matrix[0].size(); 
        if(n == 1 && m == 1) return matrix[0][0] - '0';  
        
       
        for(int i=0; i<m; i++) {
            v.push_back(matrix[0][i] - '0');
        }
        
        int mx = mah(v); 
        
       
        for(int i=1;i<n;i++) {
            for(int j=0; j<m;j++) {
             if(matrix[i][j] == '0') {
                 v[j] = 0;
             } else {
                 v[j] = v[j] + (matrix[i][j] - '0');
             }
            }
            mx = max(mx, mah(v));
        }
        return mx;
    }
};
