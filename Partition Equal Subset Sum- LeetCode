class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int n=nums.size() ,t=0;
        for(int i=n-1;i>=0;i--)
        {
           t+=nums[i];
        }
        int target=t/2;
       vector<vector<bool>> dp(n+1,vector<bool>(target+1));
        if(t%2==0)
        {
            for(int i=0;i<n;i++)
            {
                for(int j=0;j<target;j++)
                {
                    if(i==0) dp[i][j]=false;
                    if(j==0) dp[i][j]=true;
                }
        }
            for(int i=1;i<n+1;i++)
            {
                for(int j=0;j<target+1;j++)
                {
                    if(nums[i-1]<=j) {
                      dp[i][j]= dp[i-1][j] || dp[i-1][j-nums[i-1]]; }
                    else { 
                        dp[i][j] = dp[i-1][j]; }
                }
            }
            return dp[n][target];
        }
        else
            return false;
    }
};
